install.packages(c("lubridate", "openxlsx", "readxl"))
install.packages(c("lubridate", "openxlsx", "readr"))
install.packages(c("geojsonio", "lubridate", "writexl"))
install.packages(c("lubridate", "tidyr", "writexl"))
install.packages(c("deSolve", "lubridate", "writexl"))
International_Aggregate = read.csv("https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
View(International_Aggregate)
data <- read.csv("https://github.com/pcm-dpc/COVID-19/raw/master/dati-andamento-nazionale/dpc-covid19-ita-andamento-nazionale.csv")
View(data)
View(International_Aggregate)
View(International_Aggregate)
International_Aggregate <- read.csv("https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
View(International_Aggregate)
data <- read.csv("https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
View(data)
data <- read.csv("https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
View(International_Aggregate)
clc
clear
International_Data <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
View(International_Data)
International_Data$Province.State <- NULL
View(International_Data)
International_Data$Lat <- NULL
International_Data$Long <- NULL
View(International_Data)
group_by_(International_Data, add=FALSE)
group_by(International_Data, add=FALSE)
Dati <- group_by(International_Data, add=FALSE)
Dati <- group_by(International_Data, add=FALSE)
Dati <- group_by(International_Data)
grouping(International_Data)
tab<-grouping(International_Data)
tab<-group_by(International_Data)
tab<-group_rows(International_Data)
library(dplyr)
tab<-group_rows(International_Data)
View(tab)
tab<-group_by(International_Data)
View(tab)
tab<-group_by(International_Data, Country.Region)
View(tab)
aggregate(. ~ Country.Region, x, sum)
aggregate(. ~ Country.Region, sum)
View(tab)
install.packages(c("geojsonio", "readxl", "writexl"))
library(writexl)
library(dplyr)
library(geojsonio)
data <- read.csv("https://github.com/pcm-dpc/COVID-19/raw/master/dati-regioni/dpc-covid19-ita-regioni.csv", stringsAsFactors = FALSE)
ti <- readxl::read_xlsx("data/nuovi_posti_TI.xlsx")
data <- data %>%
mutate(data = as_date(data)) %>%
filter(data == max(data)) %>%
select(regione= denominazione_regione, terapia_intensiva, totale_positivi)
setwd("C:/Users/EmmeFi/Dropbox/codici/data")
ti <- readxl::read_xlsx("data/nuovi_posti_TI.xlsx")
ti <- readxl::read_xlsx("C:/Users/EmmeFi/Dropbox/codici/data/nuovi_posti_TI.xlsx")
View(ti)
View(data)
data <- data %>%
mutate(data = as_date(data)) %>%
filter(data == max(data)) %>%
select(regione= denominazione_regione, terapia_intensiva, totale_positivi)
library(writexl)
library(dplyr)
library(geojsonio)
data <- data %>%
mutate(data = as_date(data)) %>%
filter(data == max(data)) %>%
select(regione= denominazione_regione, terapia_intensiva, totale_positivi)
#merge PA
merge <- c("P.A. Bolzano", "P.A. Trento")
data[nrow(data)+1, 1] <- "Trentino-Alto Adige"
data[nrow(data), 2:ncol(data)] <-  apply(data[data$regione %in% merge,2:ncol(data)], 2, sum)
data <- data[!(data$regione %in% merge),] %>%
arrange(regione)
View(data)
data$posti_ti <- ti$posti_TI
data$nuovi_posti_ti <- ti$nuovi_posti_TI
data$totale_ti <- data$nuovi_posti_ti + data$posti_ti
data$saturazione <- round(data$terapia_intensiva/data$totale_ti, 2)*100
names(data)[1] <- "description"
data[data$description =="Emilia Romagna", 1] <- "Emilia-Romagna"
data[data$description =="Friuli Venezia Giulia", 1] <- "Friuli-Venezia Giulia"
data <- data %>%
mutate(area = case_when(description %in% c("Sardegna", "Sicilia") ~ "D",
description %in% c("Basilicata", "Calabria","Campania","Puglia","") ~ "C",
description %in% c("Abruzzo", "Campania","Lazio","Molise","Toscana","Umbria") ~ "B",
description %in% c("Emilia-Romagna","Friuli-Venezia Giulia","Liguria","Lombardia",
"Marche","Piemonte","Trentino-Alto Adige","Valle d'Aosta","Veneto") ~ "A"),
colore = case_when(area == "A" ~ "#cc503e",
area == "B" ~ "#edad08",
area == "C" ~ "#1d6996",
area == "D" ~ "#73af48"))
map <- geojson_read("data/regioni_italiane.geojson",  what = "sp")
map@data <- map@data %>%
left_join(data)
geojson_write(map, file=paste0("export/3_mappa_terapiaintensiva_", format(Sys.Date(), "%d%m"),".geojson"))
View(data)
nations <- c("France","UK","Germany","Spain","Italy","USA")
for (i in nations) {
read.csv(paste0("internazionale/R0_",i, ".csv"))
}
View(data)
View(ti)
View(tab)
International_Data <- read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
View(International_Data)
International_Data$Province.State <- NULL
International_Data$Lat <- NULL
International_Data$Long <- NULL
International_Data %>%
group_by(Country.Region)
datagr <- International_Data %>%
group_by(Country.Region)
View(datagr)
summarize(datagr,Country.Region )
summarize(International_Data,Country.Region )
nazione <- read.csv("https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-andamento-nazionale/dpc-covid19-ita-andamento-nazionale.csv")
View(nazione)
nazione$data <- substr(nazione$data,1,10)
View(nazione)
View(data)
View(nazione)
View(data)
